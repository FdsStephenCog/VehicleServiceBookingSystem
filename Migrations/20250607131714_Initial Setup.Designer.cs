// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleServiceBook.Models.Domains;

#nullable disable

namespace VehicleServiceBook.Migrations
{
    [DbContext(typeof(VehicleServiceBookContext))]
    [Migration("20250607131714_Initial Setup")]
    partial class InitialSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VehicleServiceBook.Models.Domains.Booking", b =>
                {
                    b.Property<int>("Bookingid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Bookingid"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("RegistrationUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValue("Pending");

                    b.Property<string>("TimeSlot")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Bookingid")
                        .HasName("PK__Booking__73961EC5F67A7B8A");

                    b.HasIndex("RegistrationUserId");

                    b.HasIndex("ServiceTypeId");

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("VehicleServiceBook.Models.Domains.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<int?>("ServiceTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("TotalAmount")
                        .HasColumnType("float");

                    b.HasKey("InvoiceId")
                        .HasName("PK__Invoice__D796AAB53F7BFBC9");

                    b.HasIndex("ServiceTypeId");

                    b.HasIndex(new[] { "BookingId" }, "UQ__Invoice__73951AEC734F6989")
                        .IsUnique()
                        .HasFilter("[BookingId] IS NOT NULL");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("VehicleServiceBook.Models.Domains.Mechanic", b =>
                {
                    b.Property<int>("Mechanicid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Mechanicid"));

                    b.Property<string>("Expertise")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MechanicName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ServiceCenterId")
                        .HasColumnType("int");

                    b.HasKey("Mechanicid")
                        .HasName("PK__Mechanic__6B0509C952C35A70");

                    b.HasIndex("ServiceCenterId");

                    b.ToTable("Mechanic", (string)null);
                });

            modelBuilder.Entity("VehicleServiceBook.Models.Domains.Registration", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserId")
                        .HasName("PK__Registra__1788CC4CFFFF47B6");

                    b.HasIndex(new[] { "Phone" }, "UQ__Registra__5C7E359EB11CB881")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL");

                    b.HasIndex(new[] { "Email" }, "UQ__Registra__A9D105349468CAF8")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Registration", (string)null);
                });

            modelBuilder.Entity("VehicleServiceBook.Models.Domains.ServiceCenter", b =>
                {
                    b.Property<int>("ServiceCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceCenterId"));

                    b.Property<string>("ServiceCenterContact")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ServiceCenterLocation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ServiceCenterName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ServiceCenterId")
                        .HasName("PK__ServiceC__71B62BE37DB8DD79");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "ServiceCenterContact" }, "UQ__ServiceC__F2124AAD32FA906C")
                        .IsUnique()
                        .HasFilter("[ServiceCenterContact] IS NOT NULL");

                    b.ToTable("ServiceCenter", (string)null);
                });

            modelBuilder.Entity("VehicleServiceBook.Models.Domains.ServiceType", b =>
                {
                    b.Property<int>("ServiceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceTypeId"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("ServiceTypeId")
                        .HasName("PK__ServiceT__8ADFAA6C42E00C64");

                    b.ToTable("ServiceType", (string)null);
                });

            modelBuilder.Entity("VehicleServiceBook.Models.Domains.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Model")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("VehicleId")
                        .HasName("PK__Vehicle__476B5492B47F68A7");

                    b.HasIndex("UserId");

                    b.ToTable("Vehicle", (string)null);
                });

            modelBuilder.Entity("VehicleServiceBook.Models.Domains.Booking", b =>
                {
                    b.HasOne("VehicleServiceBook.Models.Domains.Registration", "Registration")
                        .WithMany("Bookings")
                        .HasForeignKey("RegistrationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleServiceBook.Models.Domains.ServiceType", "ServiceType")
                        .WithMany()
                        .HasForeignKey("ServiceTypeId");

                    b.HasOne("VehicleServiceBook.Models.Domains.ServiceCenter", "ServiceCenter")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Booking__UserId__59063A47");

                    b.HasOne("VehicleServiceBook.Models.Domains.Vehicle", "Vehicle")
                        .WithMany("Bookings")
                        .HasForeignKey("VehicleId")
                        .HasConstraintName("FK__Booking__Vehicle__59FA5E80");

                    b.Navigation("Registration");

                    b.Navigation("ServiceCenter");

                    b.Navigation("ServiceType");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("VehicleServiceBook.Models.Domains.Invoice", b =>
                {
                    b.HasOne("VehicleServiceBook.Models.Domains.Booking", "Booking")
                        .WithOne("Invoice")
                        .HasForeignKey("VehicleServiceBook.Models.Domains.Invoice", "BookingId")
                        .HasConstraintName("FK__Invoice__Booking__6FE99F9F");

                    b.HasOne("VehicleServiceBook.Models.Domains.ServiceType", "ServiceType")
                        .WithMany("Invoices")
                        .HasForeignKey("ServiceTypeId")
                        .HasConstraintName("FK__Invoice__Service__70DDC3D8");

                    b.Navigation("Booking");

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("VehicleServiceBook.Models.Domains.Mechanic", b =>
                {
                    b.HasOne("VehicleServiceBook.Models.Domains.ServiceCenter", "ServiceCenter")
                        .WithMany("Mechanics")
                        .HasForeignKey("ServiceCenterId")
                        .HasConstraintName("FK__Mechanic__Servic__5165187F");

                    b.Navigation("ServiceCenter");
                });

            modelBuilder.Entity("VehicleServiceBook.Models.Domains.ServiceCenter", b =>
                {
                    b.HasOne("VehicleServiceBook.Models.Domains.Registration", "User")
                        .WithMany("ServiceCenters")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__ServiceCe__UserI__4E88ABD4");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleServiceBook.Models.Domains.Vehicle", b =>
                {
                    b.HasOne("VehicleServiceBook.Models.Domains.Registration", "User")
                        .WithMany("Vehicles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Vehicle__UserId__5629CD9C");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleServiceBook.Models.Domains.Booking", b =>
                {
                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("VehicleServiceBook.Models.Domains.Registration", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("ServiceCenters");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("VehicleServiceBook.Models.Domains.ServiceCenter", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Mechanics");
                });

            modelBuilder.Entity("VehicleServiceBook.Models.Domains.ServiceType", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("VehicleServiceBook.Models.Domains.Vehicle", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
